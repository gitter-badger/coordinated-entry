package com.hserv.coordinatedentry.entity;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;

import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;

import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Model class of Response_Storage.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@Entity
public class ResponseStorage implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Integer responseId;

	
	@OneToMany(mappedBy="responseStorage", cascade=CascadeType.ALL)
	@JsonManagedReference
	private List<SectionScore> sectionScoreList;
	
	private Integer surveyId;
	
	@NotEmpty(message = "survey.response.clientid.not.empty")
	@Length(max = 255, message = "survey.response.clientidid.max.length")
	private String clientId;
	
	private Date dateCreated;
	private Date dateUpdated;
	private String userId;
	private String responseValue;
	private String responseSubassessment;
	private String appId;
	private Date effectiveDate;

	
	
	/** response_type_id. *//*
	@ManyToOne
	@JoinColumn(name="response_type_fk_id")
	@JsonBackReference
	private Integer responseTypeId;
	
	
	//TODO: Uncomment section id & question id as per requirement & mapping specified in ERD, 
	//Also check for other fields
	 * 
	*//** section_id. *//*
	@ManyToOne
	@JoinColumn(name="section_fk_id")
	@JsonBackReference
	private Integer sectionId;
	
	*//** question_id. *//*
	@ManyToOne
	@JoinColumn(name="question_fk_id")
	@JsonBackReference
	private Integer questionId;*/

	/**
	 * Constructor.
	 */
	public ResponseStorage() {
	}

	public Integer getResponseId() {
		return responseId;
	}

	public void setResponseId(Integer responseId) {
		this.responseId = responseId;
	}

	public String getClientId() {
		return clientId;
	}

	public void setClientId(String clientId) {
		this.clientId = clientId;
	}

	public Date getDateCreated() {
		return dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	public Date getDateUpdated() {
		return dateUpdated;
	}

	public void setDateUpdated(Date dateUpdated) {
		this.dateUpdated = dateUpdated;
	}

	public String getUserId() {
		return userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

    public Integer getSurveyId() {
		return surveyId;
	}

	public void setSurveyId(Integer surveyId) {
		this.surveyId = surveyId;
	}

	public String getResponseValue() {
		return responseValue;
	}

	public void setResponseValue(String responseValue) {
		this.responseValue = responseValue;
	}

	public String getResponseSubassessment() {
		return responseSubassessment;
	}

	public void setResponseSubassessment(String responseSubassessment) {
		this.responseSubassessment = responseSubassessment;
	}

	public String getAppId() {
		return appId;
	}

	public void setAppId(String appId) {
		this.appId = appId;
	}

	public Date getEffectiveDate() {
		return effectiveDate;
	}

	public void setEffectiveDate(Date effectiveDate) {
		this.effectiveDate = effectiveDate;
	}

	public List<SectionScore> getSectionScoreList() {
		return sectionScoreList;
	}

	public void setSectionScoreList(List<SectionScore> sectionScoreList) {
		this.sectionScoreList = sectionScoreList;
	}

}
