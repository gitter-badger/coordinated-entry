package com.hserv.coordinatedentry.entity;

import java.io.Serializable;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;

import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;

import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Model class of Response_Storage.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@Entity
public class ResponseStorage implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	@Id
	// @GeneratedValue(strategy=GenerationType.SEQUENCE,
	// generator="client_Id_seq")
	// @SequenceGenerator(name="client_Id_seq", sequenceName="client_Id_seq")
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Integer responseId;

	@OneToMany(mappedBy="responseStorage", cascade=CascadeType.ALL)
	@JsonManagedReference
	private List<QuestionResponse> questionResponseList;
	
	@OneToMany(mappedBy="responseStorage", cascade=CascadeType.ALL)
	@JsonManagedReference
	private List<SectionScore> sectionScoreList;
	
	private Integer surveyId;
	private String clientId;
	private Date dateCreated;
	private Date dateUpdated;
	private String userId;
	
	/** response_value. *//*
	private String responseValue;

	*//** response_subassessment. *//*
	private String responseSubassessment;*/
	
	/** client_id. */
	@NotEmpty(message = "survey.response.clientid.not.empty")
	@Length(max = 255, message = "survey.response.clientidid.max.length")
	
	
	/** app_id. *//*
	private String appId;

	*//** effective_date. *//*
	private Date effectiveDate;*/

	
	
	/** response_type_id. *//*
	@ManyToOne
	@JoinColumn(name="response_type_fk_id")
	@JsonBackReference
	private Integer responseTypeId;
	
	*//** section_id. *//*
	@ManyToOne
	@JoinColumn(name="section_fk_id")
	@JsonBackReference
	private Integer sectionId;
	
	*//** question_id. *//*
	@ManyToOne
	@JoinColumn(name="question_fk_id")
	@JsonBackReference
	private Integer questionId;*/

	/**
	 * Constructor.
	 */
	public ResponseStorage() {
	}

	public Integer getResponseId() {
		return responseId;
	}

	public void setResponseId(Integer responseId) {
		this.responseId = responseId;
	}

	public String getClientId() {
		return clientId;
	}

	public void setClientId(String clientId) {
		this.clientId = clientId;
	}

	public Date getDateCreated() {
		return dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	public Date getDateUpdated() {
		return dateUpdated;
	}

	public void setDateUpdated(Date dateUpdated) {
		this.dateUpdated = dateUpdated;
	}

	public String getUserId() {
		return userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

    public Integer getSurveyId() {
		return surveyId;
	}

	public void setSurveyId(Integer surveyId) {
		this.surveyId = surveyId;
	}

	public List<QuestionResponse> getQuestionResponseList() {
		return questionResponseList;
	}

	public void setQuestionResponseList(List<QuestionResponse> questionResponseList) {
		this.questionResponseList = questionResponseList;
	}

}
